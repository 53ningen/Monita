#!/usr/local/bin/bash

usage_exit() {
        echo "Usage: $0 [-f] (dev|prod)" 1>&2
        exit 1
}

while getopts f OPT
do
    case ${OPT} in
        f)  FLAG_F=1
            ;;
    esac
done
shift $((OPTIND - 1))


ARG1=$1
stage=${ARG1}
Stage="${ARG1[@]^}"
echo stage: ${stage}

. ./.env.$ARG1

if [[ ${FLAG_F} = 1 ]]; then
    layers=(
      "dependencies"
    )


    for layer in ${layers[@]}; do
      echo pip install $layer
      mkdir -p src/layers/$layer/
      pushd src/layers/$layer/
      docker run --rm -v "$PWD":/var/task -w /var/task lambci/lambda:build-python3.7 pip install -r requirements.txt -t python
      popd
    done
fi

sam build

sam package --output-template-file packaged.yaml \
  --s3-bucket $S3Bucket \
  --s3-prefix $S3KeyPrefix \
  --profile $AWSProfile

sam deploy --template-file packaged.yaml \
  --capabilities CAPABILITY_NAMED_IAM \
  --stack-name ${Stage}Monita \
  --profile $AWSProfile \
  --parameter-overrides \
    "Schedule=$Schedule" \
    "ConfigBucket=$ConfigBucket" \
    "ConfigKey=$ConfigKey" \
    "NotificationTargetTopicArn=$NotificationTargetTopicArn" \
    "LogRetentionInDays=$LogRetentionInDays" \
    "RSSTopicArn=$RSSTopicArn" \
    "WebsiteTopicArn=$WebsiteTopicArn" \
    "RSSSchedule=$RSSSchedule" \
    "WebsiteSchedule=$WebsiteSchedule"
