AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Monita: Tools for Monitoring Website Changes

Globals:
  Function:
    Timeout: 60
    Runtime: python3.7
    MemorySize: 128
    Handler: app.lambda_handler

Parameters:
  ConfigBucket:
    Type: String
  ConfigKey:
    Type: String
  LogRetentionInDays:
    Type: Number
    Default: 7
  RSSTopicArn:
    Type: String
  WebsiteTopicArn:
    Type: String
  RSSSchedule:
    Type: String
    Default: "rate(60 minutes)"
  WebsiteSchedule:
    Type: String
    Default: "rate(60 minutes)"


Resources:
  MonitaBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  DependenciesLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        Description: layer for Monita
        ContentUri: src/layers/dependencies
        RetentionPolicy: Retain
        CompatibleRuntimes:
          - python3.6
          - python3.7
  SharedLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        Description: shared files for Monita
        ContentUri: src/layers/shared
        RetentionPolicy: Retain
        CompatibleRuntimes:
          - python3.6
          - python3.7


  CollectRSSEntriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/collect_rss_entries
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Environment:
        Variables:
          ConfigBucket: !Sub ${ConfigBucket}
          ConfigKeyName: !Sub ${ConfigKey}
          MonitaBucket: !Ref MonitaBucket
          TopicArn: !Sub ${RSSTopicArn}
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref MonitaBucket
        - S3ReadPolicy:
            BucketName: !Sub ${ConfigBucket}
        - SNSPublishMessagePolicy:
            TopicName:
              !Select
                - 5
                - !Split
                  - ":"
                  - !Sub ${RSSTopicArn}
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub ${RSSSchedule}
  CollectRSSEntriesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
        LogGroupName:
          !Join
            - ''
            - - '/aws/lambda/'
              - !Ref CollectRSSEntriesFunction
        RetentionInDays: !Sub ${LogRetentionInDays}


  DetectWebsiteChangesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/detect_website_changes
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Environment:
        Variables:
          ConfigBucket: !Sub ${ConfigBucket}
          ConfigKeyName: !Sub ${ConfigKey}
          MonitaBucket: !Ref MonitaBucket
          TopicArn: !Sub ${WebsiteTopicArn}
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref MonitaBucket
        - S3ReadPolicy:
            BucketName: !Sub ${ConfigBucket}
        - SNSPublishMessagePolicy:
            TopicName:
              !Select
                - 5
                - !Split
                  - ":"
                  - !Sub ${WebsiteTopicArn}
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: !Sub ${WebsiteSchedule}
  DetectWebsiteChangesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
        LogGroupName:
          !Join
            - ''
            - - '/aws/lambda/'
              - !Ref DetectWebsiteChangesFunction
        RetentionInDays: !Sub ${LogRetentionInDays}
